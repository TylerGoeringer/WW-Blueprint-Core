using System;
using System.Collections.Generic;

namespace BlueprintCoreGen.CodeGen.Overrides.Ignored
{
  // Examples generated by TypeUsageAnalyzer
  internal static class IgnoredGameActions
  {
    public static readonly List<Type> Types =
      new()
      {
        typeof(Kingmaker.EntitySystem.Persistence.Versioning.UnitUpgraderOnlyActions.SetAlignmentFromBlueprint),
        typeof(Kingmaker.EntitySystem.Persistence.Versioning.UpgraderOnlyActions.SetSharedVendorTable),
        typeof(Kingmaker.Dungeon.Actions.ActionCreateImportedCompanion),
        typeof(Kingmaker.Dungeon.Actions.ActionEnterToDungeon),
        typeof(Kingmaker.Dungeon.Actions.ActionGoDeeperIntoDungeon),
        typeof(Kingmaker.Dungeon.Actions.ActionIncreaseDungeonStage),
        typeof(Kingmaker.Dungeon.Actions.ActionSetDungeonStage),
        typeof(Kingmaker.UnitLogic.Mechanics.Actions.AbilityCustomSharedBurden),
        typeof(Kingmaker.UnitLogic.Mechanics.Actions.AbilityCustomSharedGrace),
        typeof(Kingmaker.UnitLogic.Mechanics.Actions.ContextActionAeonRollbackToSavedState),
        typeof(Kingmaker.UnitLogic.Mechanics.Actions.ContextActionAttackWithWeapon),
        typeof(Kingmaker.UnitLogic.Mechanics.Actions.ContextActionDetectSecretDoors),
        typeof(Kingmaker.UnitLogic.Mechanics.Actions.ContextActionForEachSwallowedUnit),
        typeof(Kingmaker.UnitLogic.Mechanics.Actions.ContextActionPrintHDRestrictionToCombatLog),
        typeof(Kingmaker.UnitLogic.Mechanics.Actions.ContextActionSpendAttackOfOpportunity),
        typeof(Kingmaker.UnitLogic.Mechanics.Actions.ContextActionStealBuffs),
        typeof(Kingmaker.UnitLogic.Mechanics.Actions.ContextActionTranslocate),
        typeof(Kingmaker.Kingdom.Flags.KingdomMoraleFlagUpdateIncome),
        typeof(Kingmaker.Kingdom.Armies.Actions.ChangeMercenaryWeight),
        typeof(Kingmaker.Kingdom.Armies.Actions.DecreaseRecruitsPool),
        typeof(Kingmaker.Kingdom.Actions.KingdomActionActivateEventDeck),
        typeof(Kingmaker.Kingdom.Actions.KingdomActionAddFreeBuilding),
        typeof(Kingmaker.Kingdom.Actions.KingdomActionArtisanRequestHelp),
        typeof(Kingmaker.Kingdom.Actions.KingdomActionCollectLoot),
        typeof(Kingmaker.Kingdom.Actions.KingdomActionFillSettlementByLocation),
        typeof(Kingmaker.Kingdom.Actions.KingdomActionGetArtisanGift),
        typeof(Kingmaker.Kingdom.Actions.KingdomActionGetArtisanGiftWithCertainTier),
        typeof(Kingmaker.Kingdom.Actions.KingdomActionGetResourcesByUnitsCount),
        typeof(Kingmaker.Kingdom.Actions.KingdomActionMakeRoll),
        typeof(Kingmaker.Kingdom.Actions.KingdomActionModifyBuildTime),
        typeof(Kingmaker.Kingdom.Actions.KingdomActionModifyClaims),
        typeof(Kingmaker.Kingdom.Actions.KingdomActionModifyEventDC),
        typeof(Kingmaker.Kingdom.Actions.KingdomActionModifyRE),
        typeof(Kingmaker.Kingdom.Actions.KingdomActionModifyRankTime),
        typeof(Kingmaker.Kingdom.Actions.KingdomActionModifyStatRandom),
        typeof(Kingmaker.Kingdom.Actions.KingdomActionModifyUnrest),
        typeof(Kingmaker.Kingdom.Actions.KingdomActionPullRankupChangesIntoDialog),
        typeof(Kingmaker.Kingdom.Actions.KingdomActionRemoveEventDeck),
        typeof(Kingmaker.Kingdom.Actions.KingdomActionRequestArtisanGift),
        typeof(Kingmaker.Kingdom.Actions.KingdomActionResetRecurrence),
        typeof(Kingmaker.Kingdom.Actions.KingdomActionRestartEvent),
        typeof(Kingmaker.Kingdom.Actions.KingdomActionRollbackRecurrence),
        typeof(Kingmaker.Kingdom.Actions.KingdomActionSetAlignment),
        typeof(Kingmaker.Kingdom.Actions.KingdomActionSetRegionalIncome),
        typeof(Kingmaker.Assets.UnitLogic.Mechanics.Actions.ContextActionSwitchDualCompanion),
        typeof(Kingmaker.Designers.EventConditionActionSystem.Actions.AddDialogNotification),
        typeof(Kingmaker.Designers.EventConditionActionSystem.Actions.AdvanceUnitLevel),
        typeof(Kingmaker.Designers.EventConditionActionSystem.Actions.AlignmentSelector),
        typeof(Kingmaker.Designers.EventConditionActionSystem.Actions.AreaEntranceChange),
        typeof(Kingmaker.Designers.EventConditionActionSystem.Actions.ChangeRomance),
        typeof(Kingmaker.Designers.EventConditionActionSystem.Actions.ClearBlood),
        typeof(Kingmaker.Designers.EventConditionActionSystem.Actions.CustomEvent),
        typeof(Kingmaker.Designers.EventConditionActionSystem.Actions.DestroyMapObject),
        typeof(Kingmaker.Designers.EventConditionActionSystem.Actions.ItemSetCharges),
        typeof(Kingmaker.Designers.EventConditionActionSystem.Actions.LockRomance),
        typeof(Kingmaker.Designers.EventConditionActionSystem.Actions.MarkUnitEssentialObsolete),
        typeof(Kingmaker.Designers.EventConditionActionSystem.Actions.OverrideRainIntesity),
        typeof(Kingmaker.Designers.EventConditionActionSystem.Actions.RelockInteraction),
        typeof(Kingmaker.Designers.EventConditionActionSystem.Actions.RemoveAllAreasFromSave),
        typeof(Kingmaker.Designers.EventConditionActionSystem.Actions.RemoveDuplicateItems),
        typeof(Kingmaker.Designers.EventConditionActionSystem.Actions.ReplaceAllMythicLevelsWithMythicHeroLevels),
        typeof(Kingmaker.Designers.EventConditionActionSystem.Actions.ReplaceFeatureInProgression),
        typeof(Kingmaker.Designers.EventConditionActionSystem.Actions.ResetLocationPerceptionCheck),
        typeof(Kingmaker.Designers.EventConditionActionSystem.Actions.RestoreItemsCountInCollection),
        typeof(Kingmaker.Designers.EventConditionActionSystem.Actions.RomanceSetMaximum),
        typeof(Kingmaker.Designers.EventConditionActionSystem.Actions.RomanceSetMinimum),
        typeof(Kingmaker.Designers.EventConditionActionSystem.Actions.SetStartDate),
        typeof(Kingmaker.Designers.EventConditionActionSystem.Actions.StatusEffect),
        typeof(Kingmaker.Designers.EventConditionActionSystem.Actions.SwitchDualCompanion),
        typeof(Kingmaker.Designers.EventConditionActionSystem.Actions.TransferSharedVendorTable),
        typeof(Kingmaker.Designers.EventConditionActionSystem.Actions.UnitDismount),
        typeof(Kingmaker.Designers.EventConditionActionSystem.Actions.UnlinkDualCompanions),
        typeof(Kingmaker.Designers.EventConditionActionSystem.Actions.UnlockCookingRecipe),
        typeof(Kingmaker.Achievements.Actions.ActionAchievementIncrementCounter),
      };
  }
}
