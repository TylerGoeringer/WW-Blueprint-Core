using System;
using System.Collections.Generic;
using Kingmaker.EntitySystem.Persistence.Versioning.UnitUpgraderOnlyActions;
using Kingmaker.EntitySystem.Persistence.Versioning.UpgraderOnlyActions;
using Kingmaker.Dungeon.Actions;
using Kingmaker.UnitLogic.Mechanics.Actions;
using Kingmaker.Kingdom.Flags;
using Kingmaker.Kingdom.Armies.Actions;
using Kingmaker.Kingdom.Actions;
using Kingmaker.Assets.UnitLogic.Mechanics.Actions;
using Kingmaker.Designers.EventConditionActionSystem.Actions;
using Kingmaker.Achievements.Actions;

namespace BlueprintCoreGen.CodeGen.Overrides.Ignored
{
  // Examples generated by TypeUsageAnalyzer
  internal static class IgnoredGameActions
  {
    public static readonly List<Type> Types =
      new()
      {
        typeof(SetAlignmentFromBlueprint),
        typeof(SetSharedVendorTable),
        typeof(ActionCreateImportedCompanion),
        typeof(ActionEnterToDungeon),
        typeof(ActionGoDeeperIntoDungeon),
        typeof(ActionIncreaseDungeonStage),
        typeof(ActionSetDungeonStage),
        typeof(AbilityCustomSharedBurden),
        typeof(AbilityCustomSharedGrace),
        typeof(ContextActionAeonRollbackToSavedState),
        typeof(ContextActionAttackWithWeapon),
        typeof(ContextActionDetectSecretDoors),
        typeof(ContextActionForEachSwallowedUnit),
        typeof(ContextActionPrintHDRestrictionToCombatLog),
        typeof(ContextActionSpendAttackOfOpportunity),
        typeof(ContextActionStealBuffs),
        typeof(ContextActionTranslocate),
        typeof(KingdomMoraleFlagUpdateIncome),
        typeof(ChangeMercenaryWeight),
        typeof(DecreaseRecruitsPool),
        typeof(KingdomActionActivateEventDeck),
        typeof(KingdomActionAddFreeBuilding),
        typeof(KingdomActionArtisanRequestHelp),
        typeof(KingdomActionCollectLoot),
        typeof(KingdomActionFillSettlementByLocation),
        typeof(KingdomActionGetArtisanGift),
        typeof(KingdomActionGetArtisanGiftWithCertainTier),
        typeof(KingdomActionGetResourcesByUnitsCount),
        typeof(KingdomActionMakeRoll),
        typeof(KingdomActionModifyBuildTime),
        typeof(KingdomActionModifyClaims),
        typeof(KingdomActionModifyEventDC),
        typeof(KingdomActionModifyRE),
        typeof(KingdomActionModifyRankTime),
        typeof(KingdomActionModifyStatRandom),
        typeof(KingdomActionModifyUnrest),
        typeof(KingdomActionPullRankupChangesIntoDialog),
        typeof(KingdomActionRemoveEventDeck),
        typeof(KingdomActionRequestArtisanGift),
        typeof(KingdomActionResetRecurrence),
        typeof(KingdomActionRestartEvent),
        typeof(KingdomActionRollbackRecurrence),
        typeof(KingdomActionSetAlignment),
        typeof(KingdomActionSetRegionalIncome),
        typeof(ContextActionSwitchDualCompanion),
        typeof(AddDialogNotification),
        typeof(AdvanceUnitLevel),
        typeof(AlignmentSelector),
        typeof(AreaEntranceChange),
        typeof(ChangeRomance),
        typeof(ClearBlood),
        typeof(ClearUnitReturnPosition),
        typeof(CustomEvent),
        typeof(DestroyMapObject),
        typeof(ItemSetCharges),
        typeof(LockRomance),
        typeof(MarkUnitEssentialObsolete),
        typeof(OverrideRainIntesity),
        typeof(RelockInteraction),
        typeof(RemoveAllAreasFromSave),
        typeof(RemoveDuplicateItems),
        typeof(ReplaceAllMythicLevelsWithMythicHeroLevels),
        typeof(ReplaceFeatureInProgression),
        typeof(ResetLocationPerceptionCheck),
        typeof(RestoreItemsCountInCollection),
        typeof(RomanceSetMaximum),
        typeof(RomanceSetMinimum),
        typeof(SetStartDate),
        typeof(StatusEffect),
        typeof(SwitchDualCompanion),
        typeof(TransferSharedVendorTable),
        typeof(UnlinkDualCompanions),
        typeof(UnlockCookingRecipe),
        typeof(ActionAchievementIncrementCounter),
      };
  }
}
